/*===============================================================
    CURSO: ANALISE E DESENVOLVIMENTO DE SISTEMAS - ADS
    1º PERÍODO - DISCIPLINA DE ALGORITMO E LÓGICA DE PROGRAMAÇÃO
    Nome do aluno(a): Lucas Emmanuel Rodrigues Firmino de Paula
    1 SEMESTRE 2025
    Prof. Ernani Claudio Borges
    data: Maio 2025

*/
//===============================================================
//===============================================================
//======== LOCAL PARA DECLARAR AS INCLUDES E VARS GLOBAIS =======
//===============================================================
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <windows.h>
#include <conio.h>
#define tam 10
//===============================================================
//============== LOCAL PARA DECLARAR OS PROTOTIPOS ==============
//===============================================================

//===============================================================
//============== LOCAL PARA CRIAR OS MÓDULOS DE FUNÇÕES =========
//===============================================================
void MostrarVetor(int v[])
{
    int i;
    for(i = 0; i < tam; i++)
    {
        printf("\n%d", v[i]);
    }
}
//===============================================================

//===============================================================

//===============================================================

//===============================================================

//===============================================================
//==============  CODIGO PRINCIPAL ==============================
//===============================================================
int main()
{
    // CRIAR VARIAVEIS
    int v[tam], i, j, aux;

    for(i = 0; i < tam; i++)
        v[i] = 0;

    j = i = aux = 0;

    // Prencher vetor

    for(i = 0; i < tam; i++)
    {
        do
        {
            v[i] = rand() % (tam * 3);
        }while(v[i] <= 0);
    }

    printf("\nConteudo do vetor:");
    MostrarVetor(v);

    // Ordenar
    j = 0;
    while(j < tam)
    {
        i = 0;
        while(i < tam - 1)
        {
            if(v[i] > v[i + 1])
            {
                aux = v[i];
                v[i] = v[i + 1];
                v[i + 1] = aux;
            }
            i++;
        }
        j++;
    }

    printf("\nConteudo ordenado:");
    MostrarVetor(v);
    // FINALIZAR PROGRAMA
    printf ("\n\n\n FIM DO PROGRAMA - VAI EMBORA DAQUI :/ \n\n\n");

    return 0;
}
